import torch
from cvae import CVAE, one_hot
import matplotlib.pyplot as plt
import os

model_dir = "./model"
output_dir = os.path.join(model_dir, "samples")
os.makedirs(output_dir, exist_ok=True)

latent_dim = 120
num_classes = 10
input_channels = 1

model = CVAE(input_channels, num_classes, latent_dim)
model.load_state_dict(torch.load(os.path.join(model_dir, "model.pth")))
model.eval()

for label_idx in range(num_classes):
    z = torch.randn(1, latent_dim)
    label = torch.tensor([label_idx])
    label_one_hot = one_hot(label, num_classes, device='cpu').view(1, -1).float()
    out = model.decoder(z, label_one_hot).detach().cpu().squeeze()
    plt.imshow(out, cmap='gray')
    plt.axis('off')
    plt.savefig(os.path.join(output_dir, f"sample_{label_idx}.png"))
    plt.close()
